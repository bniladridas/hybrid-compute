---
name: CI CUDA

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: hybrid-compute-cuda
  REGISTRY: ghcr.io
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: nvidia/cuda:11.8.0-base-ubuntu22.04
      options: --gpus all

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        chmod +x ./scripts/setup-ci.sh
        ./scripts/setup-ci.sh linux cuda

    - name: Build and Test
      run: |
        mkdir -p build && cd build
        cmake .. && make
        ctest --output-on-failure

  docker:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.cuda
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/
            ${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      if: github.event_name != 'pull_request'
      run: |
        docker run --gpus all \
          -v $(pwd)/test_images:/test_images \
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/\
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
          /app/upscale /test_images/input.jpg /test_images/output.jpg
        else
          echo "CUDA not available, skipping build"
        fi
