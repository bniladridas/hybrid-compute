---
name: CI CUDA

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: hybrid-compute-cuda
  REGISTRY: ghcr.io
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    container:
      image: nvidia/cuda:11.8.0-base-ubuntu22.04
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      timeout-minutes: 5

    - name: Install dependencies
      timeout-minutes: 15
      run: |
        set -e
        echo "Installing dependencies..."
        chmod +x ./scripts/setup-ci.sh
        ./scripts/setup-ci.sh linux cuda

    - name: Build and Test
      timeout-minutes: 20
      run: |
        set -e
        echo "Building project..."
        mkdir -p build && cd build
         cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=ON \
           -DENABLE_BENCHMARK_TESTS=OFF
        make -j$(nproc) VERBOSE=1
        echo "Running tests..."
        ctest --output-on-failure --timeout 300 --parallel $(nproc)

  docker:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      timeout-minutes: 5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      timeout-minutes: 5

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      timeout-minutes: 5
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set image tags
      run: |
        REG="${{ env.REGISTRY }}"
        OWNER="${{ github.repository_owner }}"
        NAME="${{ env.IMAGE_NAME }}"
        TAG_BASE="$REG/$OWNER/$NAME"
        echo "IMAGE_TAG1=$TAG_BASE:${{ env.IMAGE_TAG }}" >> $GITHUB_ENV
        echo "IMAGE_TAG2=$TAG_BASE:latest" >> $GITHUB_ENV

    - name: Build and push Docker image
      timeout-minutes: 30
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.cuda
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.IMAGE_TAG1 }}
          ${{ env.IMAGE_TAG2 }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Test Docker image
      if: github.event_name != 'pull_request'
      timeout-minutes: 15
      run: |
        set -e
        echo "Testing Docker image..."
        if command -v nvidia-smi >/dev/null 2>&1; then
          echo "GPU detected, running GPU test..."
          timeout 600 docker run --gpus all \
            -e DEBIAN_FRONTEND=noninteractive \
            -v $(pwd)/test_images:/test_images \
            ${{ env.IMAGE_TAG1 }} \
            /app/upscale /test_images/input.jpg /test_images/output.jpg
        else
          echo "No GPU detected, running CPU test..."
          timeout 300 docker run \
            -e DEBIAN_FRONTEND=noninteractive \
            -v $(pwd)/test_images:/test_images \
            ${{ env.IMAGE_TAG1 }} \
            /app/upscale /test_images/input.jpg /test_images/output.jpg
        fi
