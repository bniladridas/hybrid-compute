---
name: CI with GPU Support

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: hybrid-compute-gpu
  REGISTRY: ghcr.io
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - cuda-version: "11.8.0"
            cudnn-version: "8"
            tag-suffix: ""
          - cuda-version: ""
            cudnn-version: ""
            tag-suffix: "-cpu"
    container:
      image: >-
        ${{ matrix.cuda-version != '' &&
          format('nvidia/cuda:{0}-base-ubuntu22.04', matrix.cuda-version) ||
          'ubuntu:22.04' }}

    steps:
    - name: Check GPU
      run: |
        nvidia-smi || echo "No GPU detected, continuing with CPU-only build"
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apt-get update && apt-get install -y \
          cmake \
          build-essential \
          libopencv-dev \
          python3 \
          python3-pip \
          && rm -rf /var/lib/apt/lists/*
        pip3 install -r requirements.txt

    - name: Build and Test
      run: |
        mkdir -p build && cd build
        cmake .. && make
        ctest --output-on-failure

  docker:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: >-
          ${{ matrix.cuda-version != '' &&
          'Dockerfile.cuda' || 'Dockerfile' }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/\
            ${{ env.IMAGE_NAME }}${{ matrix.tag-suffix }}:${{ env.IMAGE_TAG }}
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/\
            ${{ env.IMAGE_NAME }}${{ matrix.tag-suffix }}:latest
        build-args: |
          ${{ matrix.cuda-version != '' && 'NVIDIA_VISIBLE_DEVICES=all' || '' }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      if: github.event_name != 'pull_request'
      run: |
        IMAGE_TAG="${{ env.IMAGE_NAME }}${{ matrix.tag-suffix }}:\
          ${{ env.IMAGE_TAG }}"

        if [ "${{ matrix.cuda-version }}" != "" ] && command -v nvidia-smi; then
          echo "Running GPU test..."
          docker run --gpus all \
            -v $(pwd)/test_images:/test_images \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/$IMAGE_TAG \
            /app/upscale /test_images/input.jpg /test_images/output.jpg
        else
          echo "Running CPU test..."
          docker run \
            -v $(pwd)/test_images:/test_images \
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/$IMAGE_TAG \
            /app/upscale /test_images/input.jpg /test_images/output.jpg
        fi
