# ────────────────────────────────────────────────
# Stage 1: Build stage
# ────────────────────────────────────────────────
FROM nvidia/cuda:11.8.0-devel-ubuntu22.04 AS builder

# Build argument for CPU/GPU toggle
ARG USE_CUDA=ON

# Environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    TZ=UTC \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    NVIDIA_VISIBLE_DEVICES=all

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    cmake \
    build-essential \
    libopencv-dev \
    python3 \
    python3-pip \
    git \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy all sources
COPY . .

# Install Python dependencies
RUN pip3 install --no-cache-dir -r requirements.txt

# Build stage
RUN mkdir -p build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DUSE_CUDA=$USE_CUDA -DWITH_OPENCV=ON .. && \
    make -j$(nproc)

# ────────────────────────────────────────────────
# Stage 2: Runtime stage
# ────────────────────────────────────────────────
FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    NVIDIA_VISIBLE_DEVICES=all \
    LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH

# Runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libopencv-dev \
    python3 \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy binary from build stage
COPY --from=builder /app/build/bin/upscale /app/upscale

# Copy Python packages
COPY --from=builder /usr/local/lib/python3.10/dist-packages/ /usr/local/lib/python3.10/dist-packages/

# Entrypoint
ENTRYPOINT ["/app/upscale"]
CMD ["--help"]
