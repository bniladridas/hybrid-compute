# ────────────────────────────────────────────────
# Stage 1: Build stage
# ────────────────────────────────────────────────
FROM nvidia/cuda:11.8.0-devel-ubuntu22.04 as builder

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    TZ=UTC \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    NVIDIA_VISIBLE_DEVICES=all

# Install build dependencies
RUN apt-get update && apt-get install -y \
    cmake \
    build-essential \
    libopencv-dev \
    python3 \
    python3-pip \
    git \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy sources
COPY CMakeLists.txt ./
COPY benchmark.cmake ./
COPY cuda.cmake ./
COPY cmake/ ./cmake/
COPY cloud_gpu/ ./cloud_gpu/
COPY src/ ./src/
COPY include/ ./include/
COPY tests/ ./tests/
COPY create_test_image.py ./
COPY requirements.txt ./

# Install Python dependencies
RUN pip3 install --no-cache-dir -r requirements.txt

# Build with CUDA enabled
RUN mkdir -p build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DUSE_CUDA=ON -DWITH_OPENCV=ON \
          -DCMAKE_CUDA_COMPILER=/usr/local/cuda/bin/nvcc .. && \
    make -j$(nproc)

# ────────────────────────────────────────────────
# Stage 2: Runtime stage
# ────────────────────────────────────────────────
FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04

RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
    libopencv-dev \
    python3 \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy binary
COPY --from=builder /app/build/bin/upscale /app/upscale

# Copy Python packages (Ubuntu 22.04 default Python = 3.10)
COPY --from=builder /usr/local/lib/python3.10/dist-packages/ /usr/local/lib/python3.10/dist-packages/

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    NVIDIA_VISIBLE_DEVICES=all \
    LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH

ENTRYPOINT ["/app/upscale"]
CMD ["--help"]
