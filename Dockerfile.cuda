# Stage 1: Build stage
FROM nvidia/cuda:11.8.0-devel-ubuntu22.04 as builder

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    TZ=UTC \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    NVIDIA_VISIBLE_DEVICES=all

# Install build dependencies
RUN apt-get update && apt-get install -y \
    cmake \
    build-essential \
    libopencv-dev \
    python3 \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy only necessary files for building
COPY CMakeLists.txt ./
COPY benchmark.cmake ./
COPY cuda.cmake ./
COPY cmake/ ./cmake/
COPY src/ ./src/
COPY include/ ./include/
COPY requirements.txt ./

# Install Python dependencies
RUN pip3 install --no-cache-dir -r requirements.txt

# Build with CUDA support
RUN mkdir -p build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release -DUSE_CUDA=ON .. && \
    make -j$(nproc)

# Stage 2: Runtime stage
FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libopencv-dev \
    python3 \
    && rm -rf /var/lib/apt/lists/*

# Copy only necessary files from builder
WORKDIR /app
RUN mkdir -p bin
COPY --from=builder /app/build/bin/upscale /app/bin/upscale
COPY --from=builder /usr/local/lib/python3.*/dist-packages/ /usr/local/lib/python3.*/dist-packages/

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    NVIDIA_VISIBLE_DEVICES=all

# Set the entrypoint
ENTRYPOINT ["/app/upscale"]

# Default command (can be overridden)
CMD ["--help"]
